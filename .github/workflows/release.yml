name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get dependencies
        run: go mod download

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME=snapmaker-cnc-finisher-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          CGO_ENABLED=0 go build -ldflags="-s -w" -trimpath -o "${BINARY_NAME}" ./cmd/snapmaker-cnc-finisher

          # Create archive
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip "${BINARY_NAME%.exe}.zip" "${BINARY_NAME}" LICENSE README.md
          else
            tar czf "${BINARY_NAME}.tar.gz" "${BINARY_NAME}" LICENSE README.md
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            snapmaker-cnc-finisher-*.tar.gz
            snapmaker-cnc-finisher-*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
